!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r(require("joi"));else if("function"==typeof define&&define.amd)define(["joi"],r);else{var a="object"==typeof exports?r(require("joi")):r(e.joi);for(var t in a)("object"==typeof exports?exports:e)[t]=a[t]}}(self,(function(e){return(()=>{"use strict";var r={989:function(e,r,a){var t=this&&this.__createBinding||(Object.create?function(e,r,a,t){void 0===t&&(t=a),Object.defineProperty(e,t,{enumerable:!0,get:function(){return r[a]}})}:function(e,r,a,t){void 0===t&&(t=a),e[t]=r[a]}),s=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&t(r,e,a);return s(r,e),r};Object.defineProperty(r,"__esModule",{value:!0}),r.joiPassword=void 0;const i=n(a(155));r.joiPassword=i.extend((e=>({type:"string",base:e.string(),messages:{"password.minOfUppercase":"{#label} should contain at least {#min} uppercase character","password.minOfSpecialCharacters":"{#label} should contain at least {#min} special character","password.minOfLowercase":"{#label} should contain at least {#min} lowercase character","password.minOfNumeric":"{#label} should contain at least {#min} numeric character","password.noWhiteSpaces":"{#label} should not contain white spaces","password.notIncludeField":'{#label} should not include "{#field}"'},rules:{minOfUppercase:{method(e){return this.$_addRule({name:"minOfUppercase",args:{min:e}})},args:[{name:"min",assert:e=>"number"==typeof e&&!isNaN(e),message:"must be a number"}],validate:(e,r,{min:a=0})=>(e.match(/[A-Z]/g)||[]).length<a?r.error("password.minOfUppercase",{min:a}):e},minOfLowercase:{method(e){return this.$_addRule({name:"minOfLowercase",args:{min:e}})},args:[{name:"min",assert:e=>"number"==typeof e&&!isNaN(e),message:"must be a number"}],validate:(e,r,{min:a=0})=>(e.match(/[a-z]/g)||[]).length<a?r.error("password.minOfLowercase",{min:a}):e},minOfSpecialCharacters:{method(e){return this.$_addRule({name:"minOfSpecialCharacters",args:{min:e}})},args:[{name:"min",assert:e=>"number"==typeof e&&!isNaN(e),message:"must be a number"}],validate:(e,r,{min:a=0})=>e.length-(e.match(/[a-zA-Z0-9]/g)||[]).length<a?r.error("password.minOfSpecialCharacters",{min:a}):e},minOfNumeric:{method(e){return this.$_addRule({name:"minOfNumeric",args:{min:e}})},args:[{name:"min",assert:e=>"number"==typeof e&&!isNaN(e),message:"must be a number"}],validate:(e,r,{min:a=0})=>(e.match(/[0-9]/g)||[]).length<a?r.error("password.minOfNumeric",{min:a}):e},noWhiteSpaces:{validate:(e,r)=>0!==(e.match(/ /g)||[]).length?r.error("password.noWhiteSpaces"):e},notIncludeField:{method(e){return this.$_addRule({name:"notIncludeField",args:{fields:e}})},args:[{name:"fields",assert:e=>e&&Array.isArray(e),message:"must be an array of string"}],validate:(e,r,{fields:a=[]})=>{var t;const s=null===(t=r.state)||void 0===t?void 0:t.ancestors[0];if(s){const t=a.filter((r=>Object.keys(s).includes(r)&&s[r].split(" ").some((r=>e.includes(r)))));if(Boolean(t.length))return r.error("password.notIncludeField",{field:t[0]})}return e}}}}))),r.default=r.joiPassword},155:r=>{r.exports=e}},a={};return function e(t){var s=a[t];if(void 0!==s)return s.exports;var n=a[t]={exports:{}};return r[t].call(n.exports,n,n.exports,e),n.exports}(989)})()}));